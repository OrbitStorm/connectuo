//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace ConnectUO.Framework.Web {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ConnectUO Web ServiceSoap", Namespace="http://www.connectuo.com/webservice/")]
    public partial class ConnectUOWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback TestConnectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback TrackUsageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateVersionStatsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePlayStatisticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPublicServersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPatchesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServerInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatchesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ConnectUOWebService() {
            this.Url = global::ConnectUO.Framework.Properties.Settings.Default.ConnectUO_Framework_Web_ConnectUO_x0020_Web_x0020_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event TestConnectionCompletedEventHandler TestConnectionCompleted;
        
        /// <remarks/>
        public event TrackUsageCompletedEventHandler TrackUsageCompleted;
        
        /// <remarks/>
        public event UpdateVersionStatsCompletedEventHandler UpdateVersionStatsCompleted;
        
        /// <remarks/>
        public event UpdatePlayStatisticsCompletedEventHandler UpdatePlayStatisticsCompleted;
        
        /// <remarks/>
        public event GetPublicServersCompletedEventHandler GetPublicServersCompleted;
        
        /// <remarks/>
        public event GetAllPatchesCompletedEventHandler GetAllPatchesCompleted;
        
        /// <remarks/>
        public event GetServerInformationCompletedEventHandler GetServerInformationCompleted;
        
        /// <remarks/>
        public event GetLatestVersionCompletedEventHandler GetLatestVersionCompleted;
        
        /// <remarks/>
        public event GetPatchesCompletedEventHandler GetPatchesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.connectuo.com/webservice/TestConnection", RequestNamespace="http://www.connectuo.com/webservice/", ResponseNamespace="http://www.connectuo.com/webservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TestConnection() {
            object[] results = this.Invoke("TestConnection", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TestConnectionAsync() {
            this.TestConnectionAsync(null);
        }
        
        /// <remarks/>
        public void TestConnectionAsync(object userState) {
            if ((this.TestConnectionOperationCompleted == null)) {
                this.TestConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestConnectionOperationCompleted);
            }
            this.InvokeAsync("TestConnection", new object[0], this.TestConnectionOperationCompleted, userState);
        }
        
        private void OnTestConnectionOperationCompleted(object arg) {
            if ((this.TestConnectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestConnectionCompleted(this, new TestConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.connectuo.com/webservice/TrackUsage", RequestNamespace="http://www.connectuo.com/webservice/", ResponseNamespace="http://www.connectuo.com/webservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TrackUsage(System.Guid guid) {
            this.Invoke("TrackUsage", new object[] {
                        guid});
        }
        
        /// <remarks/>
        public void TrackUsageAsync(System.Guid guid) {
            this.TrackUsageAsync(guid, null);
        }
        
        /// <remarks/>
        public void TrackUsageAsync(System.Guid guid, object userState) {
            if ((this.TrackUsageOperationCompleted == null)) {
                this.TrackUsageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTrackUsageOperationCompleted);
            }
            this.InvokeAsync("TrackUsage", new object[] {
                        guid}, this.TrackUsageOperationCompleted, userState);
        }
        
        private void OnTrackUsageOperationCompleted(object arg) {
            if ((this.TrackUsageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TrackUsageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.connectuo.com/webservice/UpdateVersionStats", RequestNamespace="http://www.connectuo.com/webservice/", ResponseNamespace="http://www.connectuo.com/webservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateVersionStats(System.Guid guid, string version) {
            this.Invoke("UpdateVersionStats", new object[] {
                        guid,
                        version});
        }
        
        /// <remarks/>
        public void UpdateVersionStatsAsync(System.Guid guid, string version) {
            this.UpdateVersionStatsAsync(guid, version, null);
        }
        
        /// <remarks/>
        public void UpdateVersionStatsAsync(System.Guid guid, string version, object userState) {
            if ((this.UpdateVersionStatsOperationCompleted == null)) {
                this.UpdateVersionStatsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateVersionStatsOperationCompleted);
            }
            this.InvokeAsync("UpdateVersionStats", new object[] {
                        guid,
                        version}, this.UpdateVersionStatsOperationCompleted, userState);
        }
        
        private void OnUpdateVersionStatsOperationCompleted(object arg) {
            if ((this.UpdateVersionStatsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateVersionStatsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.connectuo.com/webservice/UpdatePlayStatistics", RequestNamespace="http://www.connectuo.com/webservice/", ResponseNamespace="http://www.connectuo.com/webservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePlayStatistics(System.Guid guid, int id) {
            this.Invoke("UpdatePlayStatistics", new object[] {
                        guid,
                        id});
        }
        
        /// <remarks/>
        public void UpdatePlayStatisticsAsync(System.Guid guid, int id) {
            this.UpdatePlayStatisticsAsync(guid, id, null);
        }
        
        /// <remarks/>
        public void UpdatePlayStatisticsAsync(System.Guid guid, int id, object userState) {
            if ((this.UpdatePlayStatisticsOperationCompleted == null)) {
                this.UpdatePlayStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePlayStatisticsOperationCompleted);
            }
            this.InvokeAsync("UpdatePlayStatistics", new object[] {
                        guid,
                        id}, this.UpdatePlayStatisticsOperationCompleted, userState);
        }
        
        private void OnUpdatePlayStatisticsOperationCompleted(object arg) {
            if ((this.UpdatePlayStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePlayStatisticsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.connectuo.com/webservice/GetPublicServers", RequestNamespace="http://www.connectuo.com/webservice/", ResponseNamespace="http://www.connectuo.com/webservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPublicServers() {
            object[] results = this.Invoke("GetPublicServers", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPublicServersAsync() {
            this.GetPublicServersAsync(null);
        }
        
        /// <remarks/>
        public void GetPublicServersAsync(object userState) {
            if ((this.GetPublicServersOperationCompleted == null)) {
                this.GetPublicServersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPublicServersOperationCompleted);
            }
            this.InvokeAsync("GetPublicServers", new object[0], this.GetPublicServersOperationCompleted, userState);
        }
        
        private void OnGetPublicServersOperationCompleted(object arg) {
            if ((this.GetPublicServersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPublicServersCompleted(this, new GetPublicServersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.connectuo.com/webservice/GetAllPatches", RequestNamespace="http://www.connectuo.com/webservice/", ResponseNamespace="http://www.connectuo.com/webservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllPatches() {
            object[] results = this.Invoke("GetAllPatches", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPatchesAsync() {
            this.GetAllPatchesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllPatchesAsync(object userState) {
            if ((this.GetAllPatchesOperationCompleted == null)) {
                this.GetAllPatchesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPatchesOperationCompleted);
            }
            this.InvokeAsync("GetAllPatches", new object[0], this.GetAllPatchesOperationCompleted, userState);
        }
        
        private void OnGetAllPatchesOperationCompleted(object arg) {
            if ((this.GetAllPatchesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPatchesCompleted(this, new GetAllPatchesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.connectuo.com/webservice/GetServerInformation", RequestNamespace="http://www.connectuo.com/webservice/", ResponseNamespace="http://www.connectuo.com/webservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetServerInformation(int id) {
            object[] results = this.Invoke("GetServerInformation", new object[] {
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetServerInformationAsync(int id) {
            this.GetServerInformationAsync(id, null);
        }
        
        /// <remarks/>
        public void GetServerInformationAsync(int id, object userState) {
            if ((this.GetServerInformationOperationCompleted == null)) {
                this.GetServerInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerInformationOperationCompleted);
            }
            this.InvokeAsync("GetServerInformation", new object[] {
                        id}, this.GetServerInformationOperationCompleted, userState);
        }
        
        private void OnGetServerInformationOperationCompleted(object arg) {
            if ((this.GetServerInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerInformationCompleted(this, new GetServerInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.connectuo.com/webservice/GetLatestVersion", RequestNamespace="http://www.connectuo.com/webservice/", ResponseNamespace="http://www.connectuo.com/webservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLatestVersion() {
            object[] results = this.Invoke("GetLatestVersion", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestVersionAsync() {
            this.GetLatestVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetLatestVersionAsync(object userState) {
            if ((this.GetLatestVersionOperationCompleted == null)) {
                this.GetLatestVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestVersionOperationCompleted);
            }
            this.InvokeAsync("GetLatestVersion", new object[0], this.GetLatestVersionOperationCompleted, userState);
        }
        
        private void OnGetLatestVersionOperationCompleted(object arg) {
            if ((this.GetLatestVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestVersionCompleted(this, new GetLatestVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.connectuo.com/webservice/GetPatches", RequestNamespace="http://www.connectuo.com/webservice/", ResponseNamespace="http://www.connectuo.com/webservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPatches(int id) {
            object[] results = this.Invoke("GetPatches", new object[] {
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatchesAsync(int id) {
            this.GetPatchesAsync(id, null);
        }
        
        /// <remarks/>
        public void GetPatchesAsync(int id, object userState) {
            if ((this.GetPatchesOperationCompleted == null)) {
                this.GetPatchesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatchesOperationCompleted);
            }
            this.InvokeAsync("GetPatches", new object[] {
                        id}, this.GetPatchesOperationCompleted, userState);
        }
        
        private void OnGetPatchesOperationCompleted(object arg) {
            if ((this.GetPatchesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatchesCompleted(this, new GetPatchesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestConnectionCompletedEventHandler(object sender, TestConnectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TrackUsageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateVersionStatsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdatePlayStatisticsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPublicServersCompletedEventHandler(object sender, GetPublicServersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPublicServersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPublicServersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllPatchesCompletedEventHandler(object sender, GetAllPatchesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPatchesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPatchesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetServerInformationCompletedEventHandler(object sender, GetServerInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetLatestVersionCompletedEventHandler(object sender, GetLatestVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPatchesCompletedEventHandler(object sender, GetPatchesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatchesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatchesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591